<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="yI{gGclMhJW9-;N/kVPm">str</variable><variable id="is4DOwsvMMsZRG6bGr5M">binary</variable><variable id="{9T/s|xJrPv#3v51V{_X">num</variable><variable id="F5/EHM+(;eNW/||UYAer">minValue</variable><variable id="Amz^2D##*`n(KHYWWURy">numCombinations</variable><variable id="{09ZWVZxnDm;{=p9j~u]">masks</variable><variable id="7%F4h7A0TRQ{nmydqv6{">minNumber</variable><variable id="R0{hFs:mte2y0?vNPh.)">list</variable><variable id="f{BfqWWCxryv4IomTCz,">differences</variable><variable id="5:w=E%58(7@7naj!bvW,">result</variable><variable id="#q8t6ujjtol.8_9^cXp!">num_of_raffles</variable><variable id="CYj[rRs`fcrEV9y7jA@:">goalNumber</variable><variable id="-KSh{.Yz:wduZG%We`wF">masks2</variable><variable id="0_9hudmgWrQnnWUuBm:~">sums</variable><variable id="*#,_La^F6dDD6fBH_J:t">raffles</variable><variable id="secsH3v~l[M:1p7D-6@i">minimums</variable><variable id="~ES%;dT=J_8O~YwWh|ZS">winningGroups</variable></variables><block type="pxt-on-start" id="eVV%-|{kiESXXF;hWY@-" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="q[EK1O@jtx/TDzB@Myat" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let masks: number[][] = []" numlines="1" declaredvars="masks"></mutation><next><block type="typescript_statement" id="]Acw;`/te;31t3!3v;JT" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="function generateRaffles(size: number, min_value: number = 1, max_value: number = 999): number[] {" line1="    let randomNumbers: number[] = [];" line2="    for (let j = 0; j &lt; size; j++) {" line3="        let number: number = Math.floor(Math.random() * (max_value - min_value + 1)) + min_value;" line4="        randomNumbers.push(number);" line5="    }" line6="    return randomNumbers;" line7="}" numlines="8"></mutation><next><block type="variables_set" id="_0mcEdNh+=F(h-G$SPsd"><field name="VAR" id="#q8t6ujjtol.8_9^cXp!">num_of_raffles</field><value name="VALUE"><shadow type="math_number" id="DQbi0qE?WfXh~2]Id(pA"><field name="NUM">20</field></shadow></value><next><block type="typescript_statement" id="zT0RoqC+|dfQ3t5G=qw," editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let raffles: number[] = generateRaffles(num_of_raffles);" numlines="1" declaredvars="raffles"></mutation><next><block type="gameSplash" id="_`wOQ}0DuMbe=*,g1EjP"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="true"></mutation><value name="title"><shadow type="text"><field name="TEXT"></field></shadow><block type="text_join" id=",LcDeg8sLlfs9|jf@INC"><mutation items="2"></mutation><value name="ADD0"><shadow type="text" id="Ph]l2wz[[J`PwJ3ga{jq"><field name="TEXT">Original List:</field></shadow></value><value name="ADD1"><shadow type="text"><field name="TEXT"></field></shadow><block type="typescript_expression" id="}1Y7_]x@?YA4H]lHKD~k" editable="false"><field name="EXPRESSION">raffles.join(", ")</field></block></value></block></value><next><block type="variables_set" id="ln!wD5#!aWHOFfSG./MD"><field name="VAR" id="CYj[rRs`fcrEV9y7jA@:">goalNumber</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="gameaskfornumber" id="204{m4y,@Q}4O[BxNb}+"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="1" _input_init="true"></mutation><value name="message"><shadow type="text" id=")4.,NwQ)l^Yx?}rWdQ4r"><field name="TEXT">Enter Number</field></shadow></value><value name="answerLength"><shadow type="math_number_minmax" id="WQ}N8WU8tA7_m}RIJQ=S"><mutation min="1" max="10" label="Number" precision="0"></mutation><field name="SLIDER">5</field></shadow></value></block></value><next><block type="variables_set" id="a:1:LSWgHQ6?y_YVGCM-"><field name="VAR" id="-KSh{.Yz:wduZG%We`wF">masks2</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="function_call_output" id="LIJikx]fNK-7IUd0MRHO"><mutation name="generateBinaryMasks" functionid="SzS0`;V#mWui$V[8Ov_a"><arg name="length" id="81ohg2viehdeby6wplnkm" type="number"></arg></mutation><value name="81ohg2viehdeby6wplnkm"><shadow type="math_number"><field name="NUM">1</field></shadow><block type="variables_get" id="UpAbeyCnDZXY98Mla-N="><field name="VAR" id="#q8t6ujjtol.8_9^cXp!">num_of_raffles</field></block></value></block></value><next><block type="variables_set" id="P$,PpP@vrvBEZBykQMLl"><field name="VAR" id="0_9hudmgWrQnnWUuBm:~">sums</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="function_call_output" id="}aK:nY{.M?dm_n9vMmOO"><mutation name="applyMasksToList" functionid="-EXOJ+BZ1rCM9d~.INkk"><arg name="raffles" id="ked2cgqkfzyhgrb4gm5k" type="Array"></arg><arg name="masks" id="g3rdtbqjdu35o2mgj9r" type="Array"></arg></mutation><value name="ked2cgqkfzyhgrb4gm5k"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id="X8UR3/U}8t^,=et@oAJ$"><field name="VAR" id="*#,_La^F6dDD6fBH_J:t">raffles</field></block></value><value name="g3rdtbqjdu35o2mgj9r"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id="#~]T!|nIXds*S8#4UKzs"><field name="VAR" id="-KSh{.Yz:wduZG%We`wF">masks2</field></block></value></block></value><next><block type="variables_set" id="4]V7;5;oKe_J6mebSCyW"><field name="VAR" id="secsH3v~l[M:1p7D-6@i">minimums</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="function_call_output" id="kOOHxPNx{N.76]+YJVC#"><mutation name="getMinimumIndices" functionid="]F{_Yoy~Xaife1xb1`n6"><arg name="sums" id="kzph5axtp27nocq8m1s6" type="Array"></arg><arg name="goal" id="0j1ms9yna5w60w3o6scb" type="number"></arg></mutation><value name="kzph5axtp27nocq8m1s6"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id="qQ#nD6.?RnQ-Tg2{]BR8"><field name="VAR" id="0_9hudmgWrQnnWUuBm:~">sums</field></block></value><value name="0j1ms9yna5w60w3o6scb"><shadow type="math_number"><field name="NUM">1</field></shadow><block type="variables_get" id="dKmzH2:mjA%u_Mx0$k5q"><field name="VAR" id="CYj[rRs`fcrEV9y7jA@:">goalNumber</field></block></value></block></value><next><block type="variables_set" id="zn)6Fp}F;~3#cfDq1^-L"><field name="VAR" id="~ES%;dT=J_8O~YwWh|ZS">winningGroups</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="function_call_output" id="x0_1#l#(hM+[(zq.s.R%"><mutation name="indexToGroupOfRaffles" functionid="G}]gKv68[2cAg6eX=xuy"><arg name="indices" id="cqrwg06qtu7yjhe7lu68" type="Array"></arg><arg name="raffles" id="7rux2ml4d826abybo62k" type="Array"></arg></mutation><value name="cqrwg06qtu7yjhe7lu68"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id=",!@Zmc^gvH|=P8PdZ!=("><field name="VAR" id="secsH3v~l[M:1p7D-6@i">minimums</field></block></value><value name="7rux2ml4d826abybo62k"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id="?E6e5y%A!CaX5|GsU7[j"><field name="VAR" id="*#,_La^F6dDD6fBH_J:t">raffles</field></block></value></block></value><next><block type="function_call" id="!ajs~SuPWcivUaSb!GCt"><mutation name="formatRaffleResults" functionid="V=z--=b2SwyU+-{{|3%-"><arg name="raffleResults" id="3sbcynb7497hoof72382f" type="Array"></arg></mutation><value name="3sbcynb7497hoof72382f"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id="h{mHHsmPCwy?nEEw[Oi|"><field name="VAR" id="~ES%;dT=J_8O~YwWh|ZS">winningGroups</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="function_definition" id="~!f*M~Uu9{TkbSVN,t!s" x="1018" y="0"><mutation name="padStart" functionid="z`}L^|v}4}Cy@=039Xsq"><arg name="str" id="t0fbmu2llbc071fdiqu9j" type="string"></arg><arg name="targetLength" id="gt203ftkef89wyropm8vlr" type="number"></arg><arg name="padString" id="nrynh76p5rxa2hdc9f3n" type="string"></arg></mutation><field name="function_name">padStart</field><comment pinned="false" h="80" w="160">Custom function to pad a string with leading characters to a certain length</comment><value name="t0fbmu2llbc071fdiqu9j"><shadow type="argument_reporter_string" id="U,e^chnkZfTbqXuSrO5{"><field name="VALUE">str</field></shadow></value><value name="gt203ftkef89wyropm8vlr"><shadow type="argument_reporter_number" id="?DX:cby}N.MX233/n,nD"><field name="VALUE">targetLength</field></shadow></value><value name="nrynh76p5rxa2hdc9f3n"><shadow type="argument_reporter_string" id="/*hV2Y{%d*cgEE7[smw?"><field name="VALUE">padString</field></shadow></value><statement name="STACK"><block type="device_while" id="~Nn+Dp1c}E1Jw!k#{b+L"><value name="COND"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="vtko~%zp5`nG.lRe$EIT"><field name="OP">LT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text_length" id="z[^0JW=S7h^:ff%~b6/k"><value name="VALUE"><block type="argument_reporter_string" id="f0.}nZ3$r5|2Yk;K4@r!"><field name="VALUE">str</field></block></value></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="@I,^(DAIS-`8D+z=Rzy^"><field name="VALUE">targetLength</field></block></value></block></value><statement name="DO"><block type="variables_set" id="EskRo4#b7gQfpeT?)-j;"><field name="VAR" id="yI{gGclMhJW9-;N/kVPm">str</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text_join" id="[Hii{CiHa{%Z`l6J#_zL"><mutation items="2"></mutation><value name="ADD0"><shadow type="text"><field name="TEXT"></field></shadow><block type="argument_reporter_string" id="C*P,/Gg?gtdPv[LhsD0d"><field name="VALUE">padString</field></block></value><value name="ADD1"><shadow type="text"><field name="TEXT"></field></shadow><block type="argument_reporter_string" id=")l}6?w,gt$KThu3sIC~?"><field name="VALUE">str</field></block></value></block></value></block></statement><next><block type="function_return" id="A%oo!U~H#n_1$t0/{FoO"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_string" id="0u`QYa!Bg{_n+Wx}kW;|"><field name="VALUE">str</field></block></value></block></next></block></statement></block><block type="function_definition" id="bX#.H6Se/]TaKF)_T2)H" x="1648" y="0"><mutation name="toBinary" functionid=",q/2cgFhktBSF61oc05D"><arg name="num" id="k3yjcwaxsv4pk0rphjmnu" type="number"></arg><arg name="length" id="iw4jlbh1svzhoxnsgq99" type="number"></arg></mutation><field name="function_name">toBinary</field><comment pinned="false" h="80" w="160">Custom function to generate a binary representation of a number</comment><value name="k3yjcwaxsv4pk0rphjmnu"><shadow type="argument_reporter_number" id="La1oofU6P1UEUHN)$U|z"><field name="VALUE">num</field></shadow></value><value name="iw4jlbh1svzhoxnsgq99"><shadow type="argument_reporter_number" id="%@A-a:mh/U^zsAAJ?#n6"><field name="VALUE">length</field></shadow></value><statement name="STACK"><block type="device_while" id="MY/GZRbyc)81#4yo}Q0;"><value name="COND"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="l!/Ts8QTb[ae9@v#.Ae-"><field name="OP">GT</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="UeqNDz|FT#$3=LjIl1X!"><field name="VALUE">num</field></block></value><value name="B"><shadow type="math_number" id="+[Za5$kM:T#:Ww=Hc8I6"><field name="NUM">0</field></shadow></value></block></value><statement name="DO"><block type="variables_set" id="iMuZuq[9nU|C|#nN9/-_"><field name="VAR" id="is4DOwsvMMsZRG6bGr5M">binary</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="text_join" id="cou)Ann!!o2zOedSEjU%"><mutation items="2"></mutation><value name="ADD0"><shadow type="text"><field name="TEXT"></field></shadow><block type="math_modulo" id="K6JTcBWX:)1sNHtdSXVB"><value name="DIVIDEND"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="Bz!A,pb:-dHz[orhl!;G"><field name="VALUE">num</field></block></value><value name="DIVISOR"><shadow type="math_number" id="N(|99NF}8HO=CXT+jeXM"><field name="NUM">2</field></shadow></value></block></value><value name="ADD1"><shadow type="text"><field name="TEXT"></field></shadow><block type="variables_get" id="X[[{xK=BbDjz(Ks#*0D["><field name="VAR" id="is4DOwsvMMsZRG6bGr5M">binary</field></block></value></block></value><next><block type="variables_set" id="ouJP,^k{ph%RY*jCkF:L"><field name="VAR" id="{9T/s|xJrPv#3v51V{_X">num</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_js_round" id="{-EgdIjRcC61n{SK/@Cy"><field name="OP">floor</field><value name="ARG0"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="[/{ib^6Cst_]ZLa5hNw="><field name="OP">DIVIDE</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="4/$OnB0RP_hAcEn]cO;D"><field name="VALUE">num</field></block></value><value name="B"><shadow type="math_number" id="C4:l]]JrAd!n]O?oG%Dw"><field name="NUM">2</field></shadow></value></block></value></block></value></block></next></block></statement><next><block type="function_return" id="Pp-8wL}vK,T=~,[pGfZ@"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="function_call_output" id="{j]/^-w3c@Wtb?ITZNK3"><mutation name="padStart" functionid="z`}L^|v}4}Cy@=039Xsq"><arg name="str" id="t0fbmu2llbc071fdiqu9j" type="string"></arg><arg name="targetLength" id="gt203ftkef89wyropm8vlr" type="number"></arg><arg name="padString" id="nrynh76p5rxa2hdc9f3n" type="string"></arg></mutation><value name="t0fbmu2llbc071fdiqu9j"><shadow type="text"><field name="TEXT">abc</field></shadow><block type="variables_get" id="WE:nqBG=]8^jy=$KlG:o"><field name="VAR" id="is4DOwsvMMsZRG6bGr5M">binary</field></block></value><value name="gt203ftkef89wyropm8vlr"><shadow type="math_number"><field name="NUM">1</field></shadow><block type="argument_reporter_number" id="(S(l[KC_}KUN~C3JKbN="><field name="VALUE">length</field></block></value><value name="nrynh76p5rxa2hdc9f3n"><shadow type="text" id="?MVRYL/_@K$U.`ivBu`N"><field name="TEXT">0</field></shadow></value></block></value></block></next></block></statement></block><block type="function_definition" id="U4F^VNy1@PQt)dBZ%Sg5" x="2431" y="0"><mutation name="findMinValue" functionid="V1|f^!RJb%E(uN~oBh6!"><arg name="array" id="i3nhiiox9nsuzo0p5b37" type="Array"></arg></mutation><field name="function_name">findMinValue</field><comment pinned="false" h="80" w="160">Custom function to find the minimum value in an array</comment><value name="i3nhiiox9nsuzo0p5b37"><shadow type="argument_reporter_array" id="ODDldi#uA9Y/0_iU9..l"><field name="VALUE">array</field></shadow></value><statement name="STACK"><block type="variables_set" id="VM{gN?lwAmRirrI#}tdR"><field name="VAR" id="F5/EHM+(;eNW/||UYAer">minValue</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_index_get" id="0t=!/SxVb^~;hQpFJnVV"><value name="LIST"><block type="argument_reporter_array" id="r=Cke5Qa@bxhDi8iwA`^"><field name="VALUE">array</field></block></value><value name="INDEX"><shadow type="math_number" id="dFV+s-b9useYgZ8e}N9h"><field name="NUM">0</field></shadow></value></block></value><next><block type="typescript_statement" id="c5JE:u74]UP%ddK2BzZ_" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="for (let i = 1; i &lt; array.length; i++) {" line1="        if (array[i] &lt; minValue) {" line2="            minValue = array[i];" line3="        }" line4="    }" numlines="5"></mutation><next><block type="function_return" id="M!xQ0w7Rv4b/*cih0l4F"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="KR%u-z$ukPsgT5}b5J!Q"><field name="VAR" id="F5/EHM+(;eNW/||UYAer">minValue</field></block></value></block></next></block></next></block></statement></block><block type="function_definition" id="!Y$w,O*Q:|!XH+Y5DpqR" x="2947" y="0"><mutation name="generateBinaryMasks" functionid="SzS0`;V#mWui$V[8Ov_a"><arg name="length" id="81ohg2viehdeby6wplnkm" type="number"></arg></mutation><field name="function_name">generateBinaryMasks</field><comment pinned="false" h="80" w="160">Function to generate binary masks for a list of a given length</comment><value name="81ohg2viehdeby6wplnkm"><shadow type="argument_reporter_number" id="clr@NO8+}`1Q.S%qDou*"><field name="VALUE">length</field></shadow></value><statement name="STACK"><block type="variables_set" id="1ZihM3mF~_E:Go~t~N*v"><field name="VAR" id="Amz^2D##*`n(KHYWWURy">numCombinations</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="+10t3KFQp/ulJUoJ{4K;"><field name="OP">POWER</field><value name="A"><shadow type="math_number" id="TA:m%3%DY/$XwFjsKFhl"><field name="NUM">2</field></shadow></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="argument_reporter_number" id="Nt$G$f]IdRNmxC`x_WEm"><field name="VALUE">length</field></block></value></block></value><next><block type="typescript_statement" id="ubEO7ERHld$YuIyt3xoZ" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="for (let k = 1; k &lt; numCombinations; k++) {" line1="        let binaryRepresentation: string = toBinary(k, length);" line2="        let mask: number[] = binaryRepresentation.split('').map(bit =&gt; parseInt(bit));" line3="        masks.push(mask);" line4="    }" numlines="5"></mutation><next><block type="function_return" id="D-NU}s]VLA3U^ZO9|=R4"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="bwimAK]^^zG?(yBjXP9~"><field name="VAR" id="{09ZWVZxnDm;{=p9j~u]">masks</field></block></value></block></next></block></next></block></statement></block><block type="function_definition" id="/`!4Lfbq{C(rf*gQjFG;" x="0" y="976"><mutation name="applyMasksToList" functionid="-EXOJ+BZ1rCM9d~.INkk"><arg name="raffles" id="ked2cgqkfzyhgrb4gm5k" type="Array"></arg><arg name="masks" id="g3rdtbqjdu35o2mgj9r" type="Array"></arg></mutation><field name="function_name">applyMasksToList</field><comment pinned="false" h="80" w="160">Function to apply binary masks to a list of integers and return the sums</comment><value name="ked2cgqkfzyhgrb4gm5k"><shadow type="argument_reporter_array" id="k?P@Gsxeu]/rh1yzCgF-"><field name="VALUE">raffles</field></shadow></value><value name="g3rdtbqjdu35o2mgj9r"><shadow type="argument_reporter_array" id="nNN^79Z7DPtG1JU7,uQ6"><field name="VALUE">masks</field></shadow></value><statement name="STACK"><block type="function_return" id="a[[jsJd6Qt]1Es@Mt~)-"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="lPmJX]Y4PYNgAnQA4WcY" editable="false"><field name="EXPRESSION">masks.map(mask =&gt;
        raffles.reduce((acc: number, raffle: number, index: number) =&gt; acc + raffle * mask[index], 0)
    )</field></block></value></block></statement></block><block type="function_definition" id="e^P`phT5r2sC(EZJl.,J" x="1397" y="976"><mutation name="getMinimumIndices" functionid="]F{_Yoy~Xaife1xb1`n6"><arg name="sums" id="kzph5axtp27nocq8m1s6" type="Array"></arg><arg name="goal" id="0j1ms9yna5w60w3o6scb" type="number"></arg></mutation><field name="function_name">getMinimumIndices</field><comment pinned="false" h="80" w="160">Function to find indices of the minimum differences</comment><value name="kzph5axtp27nocq8m1s6"><shadow type="argument_reporter_array" id=")PMX^^ET`~iI)`(=?+KV"><field name="VALUE">sums</field></shadow></value><value name="0j1ms9yna5w60w3o6scb"><shadow type="argument_reporter_number" id=")M.L#$D^pig8r3qCUzn*"><field name="VALUE">goal</field></shadow></value><statement name="STACK"><block type="typescript_statement" id="BK7K.ok8lDX;x25#om#S" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let differences: number[] = sums.map(sum =&gt; Math.abs(goal - sum));" numlines="1" declaredvars="differences"></mutation><next><block type="variables_set" id="v3sblEAL|@s-#juHfTm]"><field name="VAR" id="7%F4h7A0TRQ{nmydqv6{">minNumber</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="function_call_output" id="_QP5-}jZ|i|HL}_sOy%B"><mutation name="findMinValue" functionid="V1|f^!RJb%E(uN~oBh6!"><arg name="array" id="i3nhiiox9nsuzo0p5b37" type="Array"></arg></mutation><value name="i3nhiiox9nsuzo0p5b37"><shadow type="variables_get"><field name="VAR" id="R0{hFs:mte2y0?vNPh.)">list</field></shadow><block type="variables_get" id="Q@$TPY}yG@C{?`WyyxXb"><field name="VAR" id="f{BfqWWCxryv4IomTCz,">differences</field></block></value></block></value><next><block type="function_return" id="y3Os[Ie}aiX*,)H1d^Yu"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id="$7]/e+6f.A;UFb1(c_48" editable="false"><field name="EXPRESSION">differences.map((value, index) =&gt; value === minNumber ? index : -1).filter(index =&gt; index !== -1)</field></block></value></block></next></block></next></block></statement></block><block type="function_definition" id="OKJ7JnJ|myYlKc9PM7cE" x="2525" y="976"><mutation name="indexToGroupOfRaffles" functionid="G}]gKv68[2cAg6eX=xuy"><arg name="indices" id="cqrwg06qtu7yjhe7lu68" type="Array"></arg><arg name="raffles" id="7rux2ml4d826abybo62k" type="Array"></arg></mutation><field name="function_name">indexToGroupOfRaffles</field><comment pinned="false" h="80" w="160">Function to convert indices to groups of raffles</comment><value name="cqrwg06qtu7yjhe7lu68"><shadow type="argument_reporter_array" id="Z6DAknLepK1THpbxoL)y"><field name="VALUE">indices</field></shadow></value><value name="7rux2ml4d826abybo62k"><shadow type="argument_reporter_array" id="-}Z`^#}dWYN/-c,=w*P3"><field name="VALUE">raffles</field></shadow></value><statement name="STACK"><block type="function_return" id="gseH}s8wW+uB.^vRqI9B"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="typescript_expression" id=";fZ?fd]K3so|9Vrpg8Rl" editable="false"><field name="EXPRESSION">indices.map(index =&gt; {
        let binaryRepresentation2: string = toBinary(index + 1, raffles.length);
        return binaryRepresentation2.split('').reduce((acc: number[], bit: string, i: number) =&gt; {
            if (bit === "1") acc.push(raffles[i]);
            return acc;
        }, []);
    })</field></block></value></block></statement></block><block type="function_definition" id=",Rxn)kitNYM^O$SyMT(_" x="0" y="1278"><mutation name="formatRaffleResults" functionid="V=z--=b2SwyU+-{{|3%-"><arg name="raffleResults" id="3sbcynb7497hoof72382f" type="Array"></arg></mutation><field name="function_name">formatRaffleResults</field><comment pinned="false" h="80" w="160">Function to format the raffle results</comment><value name="3sbcynb7497hoof72382f"><shadow type="argument_reporter_array" id="(*%ZK,k|vi;/@.3;MK/c"><field name="VALUE">raffleResults</field></shadow></value><statement name="STACK"><block type="typescript_statement" id="xDnh/U7T^$Y:5u5KTwmh" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let result: string = 'Raffle Results: \n'" numlines="1" declaredvars="result"></mutation><next><block type="typescript_statement" id="*@E:*.]$Lp@{@:7EM;nt" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="raffleResults.forEach((group, i) =&gt; {" line1="        let summation: number = group.reduce((acc: number, num: number) =&gt; acc + num, 0);" line2="        let groupStr: string = group.join(', ');" line3="        result += `${summation}\t${groupStr} \n`" line4="    });" numlines="5"></mutation><next><block type="gameSplash" id="[sj=q$DD{a~=lgf#ej@@"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="true"></mutation><value name="title"><shadow type="text"><field name="TEXT"></field></shadow><block type="variables_get" id="$L$=K?sBaG7K-ss[?vL9"><field name="VAR" id="5:w=E%58(7@7naj!bvW,">result</field></block></value></block></next></block></next></block></statement></block></xml>